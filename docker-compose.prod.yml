version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: leave-app-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      interval: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: leave-app-backend-prod
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - EMAIL_SERVICE=${EMAIL_SERVICE:-gmail}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - BREVO_API_KEY=${BREVO_API_KEY}
      - BREVO_FROM_EMAIL=${BREVO_FROM_EMAIL}
      - BREVO_FROM_NAME=${BREVO_FROM_NAME}
      - MASTER_EMAIL=${MASTER_EMAIL}
      - FRONTEND_URL=${FRONTEND_URL:-http://localhost:3000}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: leave-app-frontend-prod
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=${VITE_API_URL:-http://localhost:5000/api}
      - VITE_WS_URL=${VITE_WS_URL:-ws://localhost:5000}
      - VITE_MASTER_EMAIL=${MASTER_EMAIL}
    depends_on:
      - backend
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Reverse Proxy (optional - for production SSL termination)
  nginx:
    image: nginx:alpine
    container_name: leave-app-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    profiles:
      - with-proxy

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: leave-app-network-prod