version: '3.8'

services:
  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: leave-app-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      interval: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: leave-app-backend
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - JWT_SECRET=${JWT_SECRET}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_REDIRECT_URI=${GOOGLE_REDIRECT_URI}
      - EMAIL_SERVICE=${EMAIL_SERVICE:-gmail}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - BREVO_API_KEY=${BREVO_API_KEY}
      - BREVO_FROM_EMAIL=${BREVO_FROM_EMAIL}
      - BREVO_FROM_NAME=${BREVO_FROM_NAME}
      - MASTER_EMAIL=${MASTER_EMAIL}
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: leave-app-frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:5000/api
      - VITE_WS_URL=ws://localhost:5000
      - VITE_MASTER_EMAIL=${MASTER_EMAIL}
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      - backend
    restart: unless-stopped
    command: npm run dev -- --host 0.0.0.0

  # PostgreSQL for local development (optional - if not using Supabase cloud)
  postgres:
    image: postgres:15-alpine
    container_name: leave-app-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=leave_management
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/scripts:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    profiles:
      - local-db

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  default:
    name: leave-app-network